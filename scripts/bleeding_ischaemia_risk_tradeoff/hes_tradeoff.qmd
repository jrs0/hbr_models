---
title: "Bleeding/Ischaemia Risk Trade-off Models"
project:
  output-dir: _output
execute:
  echo: false
  warning: false
format:
  pdf
jupyter: python3
fig-format: png
---

```{python}
# Some tips on using this file
# - print() does not work for rendering markdown in code block. It will mess up
#   the order of figures and text (e.g. headings)
# - To make heading, using display(Markdown("\nHeading Name")). The newline is
#   important, and I coulnd't figure out any other way other than \n to add it.

import os

os.chdir("../prototypes")

import pandas as pd
import matplotlib.pyplot as plt
from IPython.display import display, Markdown

import save_datasets as ds
from stability import plot_instability
from calibration import (
    get_bootstrapped_calibration,
    plot_calibration_curves,
    plot_prediction_distribution,
)
from summarise_model import get_model_summary, plot_model_validation_2page
from roc import get_bootstrapped_roc, get_bootstrapped_auc, plot_roc_curves

dataset_name = {
    "manual_codes": "HES (manual code groups)",
    "all_codes": "HES (all codes)",
    "manual_codes_swd": "HES (manual code groups) + SWD",
}
model_names = {
    "simple_logistic_regression": "Logistic Regression",
    "truncsvd_logistic_regression": "Truncated SVD + Logistic Regression",
}
outcome_names = {
    "bleeding_al_ani_outcome": "Bleeding",
    "hussain_ami_stroke_outcome": "AMI or Stroke",
}

# The generated report relates to one dataset. Pick that dataset here.
dataset = "manual_codes"
dataset_title = dataset_name["manual_codes"]
```

# Introduction

The table below shows a summary of the performance of the models for bleeding and ischaemia across all models and datasets

```{python}
#| label: tbl-ohe_example
#| tbl-cap: 'One-hot vectorization example'
#| tbl-column: body
#| output: asis

all_model_summary = []
for model, model_title in model_names.items():
  for outcome, outcome_title in outcome_names.items():
    try:
      df = get_model_summary(dataset, model, outcome)
      df.insert(0, "Model", model_title)
      df.insert(0, "Outcome", outcome_title)
      all_model_summary.append(df)
    except:
      # Failed to get summary for mobel (might not exist on disk)
      pass

try:
  summary = pd.concat(all_model_summary)
  print(
      summary.to_latex(
          index = False,
          position = 'h',
          caption = f"{dataset_title}",
          float_format="%.2f",
      )
  )
except:
  # This may happen if there is not table associated with the
  # dataset (not on disk)
  pass
```


# Literature

{{< pagebreak >}}
# Models

```{python}
# | output: asis

# Page break before the first model section
#display(Markdown("{{< pagebreak >}}"))

  
# This is the place to put exactly one page summarising
# the dataset characteristics
display(Markdown("Dataset description here.\\"))

num_models = len(model_names)
for m, (model, model_title) in enumerate(model_names.items()):
  display(Markdown("{{< pagebreak >}}"))
  display(Markdown(f"\n## {model_title}"))
  for outcome, outcome_title in outcome_names.items():
    #display(Markdown("{{< pagebreak >}}"))
    display(Markdown(f"\n### {outcome_title}"))
    try:
      plot_model_validation_2page(dataset, model, outcome)
    except:
      #display(Markdown("{{< pagebreak >}}"))
      display(Markdown("Currently missing.\\"))
```

## Risk Trade-off Model

# Discussion

# Conclusion